// This file has been autogenerated by the Type Info Generator

#pragma warning(disable : 4189)
#pragma warning(disable : 4505)
#include "precompiled.h"
#include "../Game_local.h"
intptr_t idClass::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 153439) { // Event_Remove
		Event_Remove();
		return 0;
	};
	if(functionNameHash == 204406) { // Event_SafeRemove
		Event_SafeRemove();
		return 0;
	};
	return 0;

};

intptr_t idForce::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idForce_Constant::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idForce_Drag::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 192385) { // GetDragPosition
		GetDragPosition();
		return 0;
	};
	if(functionNameHash == 233549) { // GetDraggedPosition
		GetDraggedPosition();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idForce_Grab::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 213643) { // GetDistanceToGoal
		GetDistanceToGoal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idForce_Field::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idForce_Spring::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Static::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 127517) { // GetGravity
		GetGravity();
		return 0;
	};
	if(functionNameHash == 208704) { // GetGravityNormal
		GetGravityNormal();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	if(functionNameHash == 178966) { // GetNumContacts
		return (intptr_t)GetNumContacts();
	};
	if(functionNameHash == 165117) { // ClearContacts
		ClearContacts();
		return 0;
	};
	if(functionNameHash == 221187) { // HasGroundContacts
		return (intptr_t)HasGroundContacts();
	};
	if(functionNameHash == 188391) { // GetBlockingInfo
		return (intptr_t)GetBlockingInfo();
	};
	if(functionNameHash == 220800) { // GetBlockingEntity
		return (intptr_t)GetBlockingEntity();
	};
	if(functionNameHash == 198674) { // GetLinearEndTime
		return (intptr_t)GetLinearEndTime();
	};
	if(functionNameHash == 213576) { // GetAngularEndTime
		return (intptr_t)GetAngularEndTime();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_StaticMulti::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 127517) { // GetGravity
		GetGravity();
		return 0;
	};
	if(functionNameHash == 208704) { // GetGravityNormal
		GetGravityNormal();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	if(functionNameHash == 178966) { // GetNumContacts
		return (intptr_t)GetNumContacts();
	};
	if(functionNameHash == 165117) { // ClearContacts
		ClearContacts();
		return 0;
	};
	if(functionNameHash == 221187) { // HasGroundContacts
		return (intptr_t)HasGroundContacts();
	};
	if(functionNameHash == 188391) { // GetBlockingInfo
		return (intptr_t)GetBlockingInfo();
	};
	if(functionNameHash == 220800) { // GetBlockingEntity
		return (intptr_t)GetBlockingEntity();
	};
	if(functionNameHash == 198674) { // GetLinearEndTime
		return (intptr_t)GetLinearEndTime();
	};
	if(functionNameHash == 213576) { // GetAngularEndTime
		return (intptr_t)GetAngularEndTime();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Base::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 127517) { // GetGravity
		GetGravity();
		return 0;
	};
	if(functionNameHash == 208704) { // GetGravityNormal
		GetGravityNormal();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	if(functionNameHash == 178966) { // GetNumContacts
		return (intptr_t)GetNumContacts();
	};
	if(functionNameHash == 165117) { // ClearContacts
		ClearContacts();
		return 0;
	};
	if(functionNameHash == 221187) { // HasGroundContacts
		return (intptr_t)HasGroundContacts();
	};
	if(functionNameHash == 188391) { // GetBlockingInfo
		return (intptr_t)GetBlockingInfo();
	};
	if(functionNameHash == 220800) { // GetBlockingEntity
		return (intptr_t)GetBlockingEntity();
	};
	if(functionNameHash == 198674) { // GetLinearEndTime
		return (intptr_t)GetLinearEndTime();
	};
	if(functionNameHash == 213576) { // GetAngularEndTime
		return (intptr_t)GetAngularEndTime();
	};
	if(functionNameHash == 392632) { // AddContactEntitiesForContacts
		AddContactEntitiesForContacts();
		return 0;
	};
	if(functionNameHash == 308634) { // ActivateContactEntities
		ActivateContactEntities();
		return 0;
	};
	if(functionNameHash == 181023) { // IsOutsideWorld
		return (intptr_t)IsOutsideWorld();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Actor::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 216567) { // GetMasterDeltaYaw
		GetMasterDeltaYaw();
		return 0;
	};
	if(functionNameHash == 195500) { // GetGroundEntity
		return (intptr_t)GetGroundEntity();
	};
	if(functionNameHash == 201909) { // SetClipModelAxis
		SetClipModelAxis();
		return 0;
	};
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 180437) { // GetGravityAxis
		GetGravityAxis();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Monster::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 202109) { // GetMaxStepHeight
		GetMaxStepHeight();
		return 0;
	};
	if(functionNameHash == 99611) { // OnGround
		return (intptr_t)OnGround();
	};
	if(functionNameHash == 167117) { // GetMoveResult
		GetMoveResult();
		return 0;
	};
	if(functionNameHash == 233773) { // GetSlideMoveEntity
		return (intptr_t)GetSlideMoveEntity();
	};
	if(functionNameHash == 148262) { // EnableImpact
		EnableImpact();
		return 0;
	};
	if(functionNameHash == 162468) { // DisableImpact
		DisableImpact();
		return 0;
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 49945) { // Rest
		Rest();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Player::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 202109) { // GetMaxStepHeight
		GetMaxStepHeight();
		return 0;
	};
	if(functionNameHash == 163603) { // GetWaterLevel
		GetWaterLevel();
		return 0;
	};
	if(functionNameHash == 152257) { // GetWaterType
		return (intptr_t)GetWaterType();
	};
	if(functionNameHash == 110484) { // HasJumped
		return (intptr_t)HasJumped();
	};
	if(functionNameHash == 150305) { // HasSteppedUp
		return (intptr_t)HasSteppedUp();
	};
	if(functionNameHash == 110457) { // GetStepUp
		GetStepUp();
		return 0;
	};
	if(functionNameHash == 138844) { // IsCrouching
		return (intptr_t)IsCrouching();
	};
	if(functionNameHash == 95320) { // OnLadder
		return (intptr_t)OnLadder();
	};
	if(functionNameHash == 192322) { // PlayerGetOrigin
		PlayerGetOrigin();
		return 0;
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 250305) { // ClearPushedVelocity
		ClearPushedVelocity();
		return 0;
	};
	if(functionNameHash == 192377) { // SnapToNextState
		SnapToNextState();
		return 0;
	};
	if(functionNameHash == 101816) { // Friction
		Friction();
		return 0;
	};
	if(functionNameHash == 166878) { // WaterJumpMove
		WaterJumpMove();
		return 0;
	};
	if(functionNameHash == 113491) { // WaterMove
		WaterMove();
		return 0;
	};
	if(functionNameHash == 86235) { // FlyMove
		FlyMove();
		return 0;
	};
	if(functionNameHash == 84433) { // AirMove
		AirMove();
		return 0;
	};
	if(functionNameHash == 98826) { // WalkMove
		WalkMove();
		return 0;
	};
	if(functionNameHash == 94860) { // DeadMove
		DeadMove();
		return 0;
	};
	if(functionNameHash == 126085) { // NoclipMove
		NoclipMove();
		return 0;
	};
	if(functionNameHash == 169622) { // SpectatorMove
		SpectatorMove();
		return 0;
	};
	if(functionNameHash == 123068) { // LadderMove
		LadderMove();
		return 0;
	};
	if(functionNameHash == 136792) { // CheckGround
		CheckGround();
		return 0;
	};
	if(functionNameHash == 107033) { // CheckDuck
		CheckDuck();
		return 0;
	};
	if(functionNameHash == 132396) { // CheckLadder
		CheckLadder();
		return 0;
	};
	if(functionNameHash == 109672) { // CheckJump
		return (intptr_t)CheckJump();
	};
	if(functionNameHash == 176680) { // CheckWaterJump
		return (intptr_t)CheckWaterJump();
	};
	if(functionNameHash == 165031) { // SetWaterLevel
		SetWaterLevel();
		return 0;
	};
	if(functionNameHash == 127768) { // DropTimers
		DropTimers();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_Parametric::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 100471) { // IsPusher
		return (intptr_t)IsPusher();
	};
	if(functionNameHash == 355226) { // GetLinearExtrapolationType
		GetLinearExtrapolationType();
		return 0;
	};
	if(functionNameHash == 371254) { // GetAngularExtrapolationType
		GetAngularExtrapolationType();
		return 0;
	};
	if(functionNameHash == 111711) { // GetSpline
		return (intptr_t)GetSpline();
	};
	if(functionNameHash == 275732) { // GetSplineAcceleration
		return (intptr_t)GetSplineAcceleration();
	};
	if(functionNameHash == 276374) { // GetSplineDeceleration
		return (intptr_t)GetSplineDeceleration();
	};
	if(functionNameHash == 220932) { // UsingSplineAngles
		return (intptr_t)UsingSplineAngles();
	};
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 188391) { // GetBlockingInfo
		return (intptr_t)GetBlockingInfo();
	};
	if(functionNameHash == 220800) { // GetBlockingEntity
		return (intptr_t)GetBlockingEntity();
	};
	if(functionNameHash == 198674) { // GetLinearEndTime
		return (intptr_t)GetLinearEndTime();
	};
	if(functionNameHash == 213576) { // GetAngularEndTime
		return (intptr_t)GetAngularEndTime();
	};
	if(functionNameHash == 147808) { // TestIfAtRest
		TestIfAtRest();
		return 0;
	};
	if(functionNameHash == 49945) { // Rest
		Rest();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_RigidBody::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 138332) { // DropToFloor
		DropToFloor();
		return 0;
	};
	if(functionNameHash == 111496) { // NoContact
		NoContact();
		return 0;
	};
	if(functionNameHash == 148262) { // EnableImpact
		EnableImpact();
		return 0;
	};
	if(functionNameHash == 162468) { // DisableImpact
		DisableImpact();
		return 0;
	};
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	if(functionNameHash == 230133) { // DropToFloorAndRest
		DropToFloorAndRest();
		return 0;
	};
	if(functionNameHash == 147808) { // TestIfAtRest
		return (intptr_t)TestIfAtRest();
	};
	if(functionNameHash == 49945) { // Rest
		Rest();
		return 0;
	};
	if(functionNameHash == 109030) { // DebugDraw
		DebugDraw();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhysics_AF::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 148383) { // GetNumBodies
		return (intptr_t)GetNumBodies();
	};
	if(functionNameHash == 225129) { // GetNumConstraints
		return (intptr_t)GetNumConstraints();
	};
	if(functionNameHash == 163512) { // GetMasterBody
		return (intptr_t)GetMasterBody();
	};
	if(functionNameHash == 274029) { // GetJointFrictionScale
		GetJointFrictionScale();
		return 0;
	};
	if(functionNameHash == 302208) { // GetContactFrictionScale
		GetContactFrictionScale();
		return 0;
	};
	if(functionNameHash == 121382) { // SetChanged
		SetChanged();
		return 0;
	};
	if(functionNameHash == 148262) { // EnableImpact
		EnableImpact();
		return 0;
	};
	if(functionNameHash == 162468) { // DisableImpact
		DisableImpact();
		return 0;
	};
	if(functionNameHash == 204504) { // UpdateClipModels
		UpdateClipModels();
		return 0;
	};
	if(functionNameHash == 202251) { // GetNumClipModels
		return (intptr_t)GetNumClipModels();
	};
	if(functionNameHash == 83909) { // GetTime
		return (intptr_t)GetTime();
	};
	if(functionNameHash == 96105) { // IsAtRest
		return (intptr_t)IsAtRest();
	};
	if(functionNameHash == 206079) { // GetRestStartTime
		return (intptr_t)GetRestStartTime();
	};
	if(functionNameHash == 100229) { // Activate
		Activate();
		return 0;
	};
	if(functionNameHash == 113512) { // PutToRest
		PutToRest();
		return 0;
	};
	if(functionNameHash == 124599) { // IsPushable
		return (intptr_t)IsPushable();
	};
	if(functionNameHash == 112278) { // SaveState
		SaveState();
		return 0;
	};
	if(functionNameHash == 156059) { // RestoreState
		RestoreState();
		return 0;
	};
	if(functionNameHash == 134558) { // DisableClip
		DisableClip();
		return 0;
	};
	if(functionNameHash == 120566) { // EnableClip
		EnableClip();
		return 0;
	};
	if(functionNameHash == 125645) { // UnlinkClip
		UnlinkClip();
		return 0;
	};
	if(functionNameHash == 96878) { // LinkClip
		LinkClip();
		return 0;
	};
	if(functionNameHash == 209529) { // EvaluateContacts
		return (intptr_t)EvaluateContacts();
	};
	if(functionNameHash == 125014) { // BuildTrees
		BuildTrees();
		return 0;
	};
	if(functionNameHash == 168534) { // PrimaryFactor
		PrimaryFactor();
		return 0;
	};
	if(functionNameHash == 248229) { // AddFrameConstraints
		AddFrameConstraints();
		return 0;
	};
	if(functionNameHash == 297042) { // RemoveFrameConstraints
		RemoveFrameConstraints();
		return 0;
	};
	if(functionNameHash == 329599) { // VerifyContactConstraints
		VerifyContactConstraints();
		return 0;
	};
	if(functionNameHash == 315282) { // SetupContactConstraints
		SetupContactConstraints();
		return 0;
	};
	if(functionNameHash == 235353) { // ApplyContactForces
		ApplyContactForces();
		return 0;
	};
	if(functionNameHash == 231929) { // ClearExternalForce
		ClearExternalForce();
		return 0;
	};
	if(functionNameHash == 124747) { // AddGravity
		AddGravity();
		return 0;
	};
	if(functionNameHash == 128439) { // SwapStates
		SwapStates();
		return 0;
	};
	if(functionNameHash == 49945) { // Rest
		Rest();
		return 0;
	};
	if(functionNameHash == 109030) { // DebugDraw
		DebugDraw();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAnimatedEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 194183) { // UpdateAnimation
		UpdateAnimation();
		return 0;
	};
	if(functionNameHash == 138578) { // GetAnimator
		return (intptr_t)GetAnimator();
	};
	if(functionNameHash == 275016) { // GetDefaultSurfaceType
		GetDefaultSurfaceType();
		return 0;
	};
	if(functionNameHash == 242178) { // UpdateDamageEffects
		UpdateDamageEffects();
		return 0;
	};
	if(functionNameHash == 258459) { // Event_ClearAllJoints
		Event_ClearAllJoints();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idCursor3D::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idGrabber::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 128839) { // Initialize
		Initialize();
		return 0;
	};
	if(functionNameHash == 136363) { // UpdateBeams
		UpdateBeams();
		return 0;
	};
	if(functionNameHash == 124817) { // ApplyShake
		ApplyShake();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMultiModelAF::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idChain::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFAttachment::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 109036) { // ClearBody
		ClearBody();
		return 0;
	};
	if(functionNameHash == 83835) { // GetBody
		return (intptr_t)GetBody();
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 175242) { // SetCombatModel
		SetCombatModel();
		return 0;
	};
	if(functionNameHash == 173814) { // GetCombatModel
		return (intptr_t)GetCombatModel();
	};
	if(functionNameHash == 123153) { // LinkCombat
		LinkCombat();
		return 0;
	};
	if(functionNameHash == 152332) { // UnlinkCombat
		UnlinkCombat();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_Base::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 357711) { // UpdateAnimationControllers
		UpdateAnimationControllers();
		return 0;
	};
	if(functionNameHash == 143723) { // FreeModelDef
		FreeModelDef();
		return 0;
	};
	if(functionNameHash == 62976) { // LoadAF
		LoadAF();
		return 0;
	};
	if(functionNameHash == 114409) { // IsActiveAF
		return (intptr_t)IsActiveAF();
	};
	if(functionNameHash == 99503) { // GetAFName
		return (intptr_t)GetAFName();
	};
	if(functionNameHash == 145077) { // GetAFPhysics
		return (intptr_t)GetAFPhysics();
	};
	if(functionNameHash == 175242) { // SetCombatModel
		SetCombatModel();
		return 0;
	};
	if(functionNameHash == 173814) { // GetCombatModel
		return (intptr_t)GetCombatModel();
	};
	if(functionNameHash == 123153) { // LinkCombat
		LinkCombat();
		return 0;
	};
	if(functionNameHash == 152332) { // UnlinkCombat
		UnlinkCombat();
		return 0;
	};
	if(functionNameHash == 233219) { // AddBindConstraints
		AddBindConstraints();
		return 0;
	};
	if(functionNameHash == 281702) { // RemoveBindConstraints
		RemoveBindConstraints();
		return 0;
	};
	if(functionNameHash == 218178) { // ShowEditingDialog
		ShowEditingDialog();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_Gibbable::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 93319) { // IsGibbed
		return (intptr_t)IsGibbed();
	};
	if(functionNameHash == 220901) { // InitSkeletonModel
		InitSkeletonModel();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_Generic::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 238202) { // KeepRunningPhysics
		KeepRunningPhysics();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_WithAttachedHead::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 110558) { // SetupHead
		SetupHead();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 123153) { // LinkCombat
		LinkCombat();
		return 0;
	};
	if(functionNameHash == 152332) { // UnlinkCombat
		UnlinkCombat();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_Vehicle::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 161405) { // GetSteerAngle
		GetSteerAngle();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_VehicleSimple::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_VehicleFourWheels::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_VehicleSixWheels::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_VehicleAutomated::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 116093) { // PostSpawn
		PostSpawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_SteamPipe::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 278530) { // InitSteamRenderEntity
		InitSteamRenderEntity();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_ClawFourFingers::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 222404) { // Event_StopFingers
		Event_StopFingers();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idHarvestable::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 32907) { // Gib
		Gib();
		return 0;
	};
	if(functionNameHash == 109920) { // BeginBurn
		BeginBurn();
		return 0;
	};
	if(functionNameHash == 78457) { // BeginFX
		BeginFX();
		return 0;
	};
	if(functionNameHash == 339354) { // Event_SpawnHarvestTrigger
		Event_SpawnHarvestTrigger();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAFEntity_Harvest::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 326927) { // Event_SpawnHarvestEntity
		Event_SpawnHarvestEntity();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idSpawnableEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPlayerStart::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idActivator::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPathCorner::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 204439) { // Event_RandomPath
		Event_RandomPath();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idDamagable::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 288410) { // Event_RestoreDamagable
		Event_RestoreDamagable();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idExplodable::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idSpring::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 206949) { // Event_LinkSpring
		Event_LinkSpring();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idForceField::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 74153) { // Toggle
		Toggle();
		return 0;
	};
	if(functionNameHash == 151873) { // Event_Toggle
		Event_Toggle();
		return 0;
	};
	if(functionNameHash == 219288) { // Event_FindTargets
		Event_FindTargets();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAnimated::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 62976) { // LoadAF
		LoadAF();
		return 0;
	};
	if(functionNameHash == 153861) { // StartRagdoll
		return (intptr_t)StartRagdoll();
	};
	if(functionNameHash == 150763) { // PlayNextAnim
		PlayNextAnim();
		return 0;
	};
	if(functionNameHash == 140926) { // Event_Start
		Event_Start();
		return 0;
	};
	if(functionNameHash == 235331) { // Event_StartRagdoll
		Event_StartRagdoll();
		return 0;
	};
	if(functionNameHash == 183671) { // Event_Footstep
		Event_Footstep();
		return 0;
	};
	if(functionNameHash == 318263) { // Event_GetAnimationLength
		Event_GetAnimationLength();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idStaticEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 218178) { // ShowEditingDialog
		ShowEditingDialog();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncEmitter::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncShootProjectile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncSmoke::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncSplat::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 139643) { // Event_Splat
		Event_Splat();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTextEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idLocationEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 138280) { // GetLocation
		return (intptr_t)GetLocation();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idLocationSeparatorEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idVacuumSeparatorEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idVacuumEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idBeam::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 218295) { // Event_MatchTarget
		Event_MatchTarget();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idLiquid::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idShaking::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 148900) { // BeginShaking
		BeginShaking();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idEarthQuake::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncPortal::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncAASPortal::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncAASObstacle::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncRadioChatter::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPhantomObjects::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idShockwave::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncMountedObject::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idFuncMountedWeapon::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 195811) { // Event_PostSpawn
		Event_PostSpawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPortalSky::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 195811) { // Event_PostSpawn
		Event_PostSpawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idActor::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 90512) { // Restart
		Restart();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 275016) { // GetDefaultSurfaceType
		GetDefaultSurfaceType();
		return 0;
	};
	if(functionNameHash == 62976) { // LoadAF
		LoadAF();
		return 0;
	};
	if(functionNameHash == 114109) { // SetupBody
		SetupBody();
		return 0;
	};
	if(functionNameHash == 120493) { // CheckBlink
		CheckBlink();
		return 0;
	};
	if(functionNameHash == 198483) { // ShutdownThreads
		ShutdownThreads();
		return 0;
	};
	if(functionNameHash == 476562) { // ShouldConstructScriptObjectAtSpawn
		ShouldConstructScriptObjectAtSpawn();
		return 0;
	};
	if(functionNameHash == 282905) { // ConstructScriptObject
		return (intptr_t)ConstructScriptObject();
	};
	if(functionNameHash == 154576) { // UpdateScript
		UpdateScript();
		return 0;
	};
	if(functionNameHash == 109890) { // EyeHeight
		EyeHeight();
		return 0;
	};
	if(functionNameHash == 111617) { // EyeOffset
		EyeOffset();
		return 0;
	};
	if(functionNameHash == 180136) { // GetEyePosition
		GetEyePosition();
		return 0;
	};
	if(functionNameHash == 221816) { // SetupDamageGroups
		SetupDamageGroups();
		return 0;
	};
	if(functionNameHash == 108255) { // ClearPain
		ClearPain();
		return 0;
	};
	if(functionNameHash == 175242) { // SetCombatModel
		SetCombatModel();
		return 0;
	};
	if(functionNameHash == 173814) { // GetCombatModel
		return (intptr_t)GetCombatModel();
	};
	if(functionNameHash == 123153) { // LinkCombat
		LinkCombat();
		return 0;
	};
	if(functionNameHash == 152332) { // UnlinkCombat
		UnlinkCombat();
		return 0;
	};
	if(functionNameHash == 153861) { // StartRagdoll
		return (intptr_t)StartRagdoll();
	};
	if(functionNameHash == 140334) { // StopRagdoll
		StopRagdoll();
		return 0;
	};
	if(functionNameHash == 357711) { // UpdateAnimationControllers
		UpdateAnimationControllers();
		return 0;
	};
	if(functionNameHash == 228780) { // GetDeltaViewAngles
		GetDeltaViewAngles();
		return 0;
	};
	if(functionNameHash == 122997) { // HasEnemies
		return (intptr_t)HasEnemies();
	};
	if(functionNameHash == 248410) { // EnemyWithMostHealth
		return (intptr_t)EnemyWithMostHealth();
	};
	if(functionNameHash == 95320) { // OnLadder
		OnLadder();
		return 0;
	};
	if(functionNameHash == 163648) { // GetRenderView
		return (intptr_t)GetRenderView();
	};
	if(functionNameHash == 190792) { // UpdateAnimState
		UpdateAnimState();
		return 0;
	};
	if(functionNameHash == 113011) { // WaitState
		return (intptr_t)WaitState();
	};
	if(functionNameHash == 162328) { // GetHeadEntity
		return (intptr_t)GetHeadEntity();
	};
	if(functionNameHash == 225137) { // RemoveAttachments
		RemoveAttachments();
		return 0;
	};
	if(functionNameHash == 314148) { // CopyJointsFromBodyToHead
		CopyJointsFromBodyToHead();
		return 0;
	};
	if(functionNameHash == 141348) { // FinishSetup
		FinishSetup();
		return 0;
	};
	if(functionNameHash == 110558) { // SetupHead
		SetupHead();
		return 0;
	};
	if(functionNameHash == 222148) { // PlayFootStepSound
		PlayFootStepSound();
		return 0;
	};
	if(functionNameHash == 256642) { // Event_EnableEyeFocus
		Event_EnableEyeFocus();
		return 0;
	};
	if(functionNameHash == 271699) { // Event_DisableEyeFocus
		Event_DisableEyeFocus();
		return 0;
	};
	if(functionNameHash == 183671) { // Event_Footstep
		Event_Footstep();
		return 0;
	};
	if(functionNameHash == 221428) { // Event_EnableWalkIK
		Event_EnableWalkIK();
		return 0;
	};
	if(functionNameHash == 236229) { // Event_DisableWalkIK
		Event_DisableWalkIK();
		return 0;
	};
	if(functionNameHash == 215105) { // Event_DisablePain
		Event_DisablePain();
		return 0;
	};
	if(functionNameHash == 200459) { // Event_EnablePain
		Event_EnablePain();
		return 0;
	};
	if(functionNameHash == 213201) { // Event_GetPainAnim
		Event_GetPainAnim();
		return 0;
	};
	if(functionNameHash == 203021) { // Event_HasEnemies
		Event_HasEnemies();
		return 0;
	};
	if(functionNameHash == 177119) { // Event_GetState
		Event_GetState();
		return 0;
	};
	if(functionNameHash == 158348) { // Event_GetHead
		Event_GetHead();
		return 0;
	};
	if(functionNameHash == 231666) { // Event_GetWaitState
		Event_GetWaitState();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idProjectile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 144625) { // FreeLightDef
		FreeLightDef();
		return 0;
	};
	if(functionNameHash == 99509) { // GetOwner
		return (intptr_t)GetOwner();
	};
	if(functionNameHash == 235142) { // GetProjectileState
		return (intptr_t)GetProjectileState();
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 76384) { // Fizzle
		Fizzle();
		return 0;
	};
	if(functionNameHash == 283804) { // GetLaunchedFromGrabber
		return (intptr_t)GetLaunchedFromGrabber();
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 254726) { // AddParticlesAndLight
		AddParticlesAndLight();
		return 0;
	};
	if(functionNameHash == 166403) { // Event_Explode
		Event_Explode();
		return 0;
	};
	if(functionNameHash == 154212) { // Event_Fizzle
		Event_Fizzle();
		return 0;
	};
	if(functionNameHash == 320254) { // Event_GetProjectileState
		Event_GetProjectileState();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idGuidedProjectile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idSoulCubeMissile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 169855) { // ReturnToOwner
		ReturnToOwner();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idBFGProjectile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 107659) { // FreeBeams
		FreeBeams();
		return 0;
	};
	if(functionNameHash == 218449) { // Event_RemoveBeams
		Event_RemoveBeams();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idHomingProjectile::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idDebris::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 73334) { // Launch
		Launch();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 88017) { // Explode
		Explode();
		return 0;
	};
	if(functionNameHash == 76384) { // Fizzle
		Fizzle();
		return 0;
	};
	if(functionNameHash == 166403) { // Event_Explode
		Event_Explode();
		return 0;
	};
	if(functionNameHash == 154212) { // Event_Fizzle
		Event_Fizzle();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponObject::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 81139) { // CanFire
		CanFire();
		return 0;
	};
	if(functionNameHash == 141892) { // ResetStates
		ResetStates();
		return 0;
	};
	if(functionNameHash == 177614) { // CanSwitchState
		CanSwitchState();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	if(functionNameHash == 139817) { // IsHolstered
		IsHolstered();
		return 0;
	};
	if(functionNameHash == 85638) { // IsRisen
		IsRisen();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idWeapon::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 99509) { // GetOwner
		return (intptr_t)GetOwner();
	};
	if(functionNameHash == 476562) { // ShouldConstructScriptObjectAtSpawn
		ShouldConstructScriptObjectAtSpawn();
		return 0;
	};
	if(functionNameHash == 59010) { // Clear
		Clear();
		return 0;
	};
	if(functionNameHash == 216848) { // IsWorldModelReady
		return (intptr_t)IsWorldModelReady();
	};
	if(functionNameHash == 47418) { // Icon
		return (intptr_t)Icon();
	};
	if(functionNameHash == 103137) { // UpdateGUI
		UpdateGUI();
		return 0;
	};
	if(functionNameHash == 81854) { // PdaIcon
		return (intptr_t)PdaIcon();
	};
	if(functionNameHash == 137836) { // DisplayName
		return (intptr_t)DisplayName();
	};
	if(functionNameHash == 143596) { // Description
		return (intptr_t)Description();
	};
	if(functionNameHash == 125553) { // UpdateSkin
		return (intptr_t)UpdateSkin();
	};
	if(functionNameHash == 97537) { // IsFiring
		return (intptr_t)IsFiring();
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 87316) { // PutAway
		PutAway();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 141364) { // LowerWeapon
		LowerWeapon();
		return 0;
	};
	if(functionNameHash == 138813) { // RaiseWeapon
		RaiseWeapon();
		return 0;
	};
	if(functionNameHash == 123229) { // HideWeapon
		HideWeapon();
		return 0;
	};
	if(functionNameHash == 127945) { // ShowWeapon
		ShowWeapon();
		return 0;
	};
	if(functionNameHash == 175275) { // HideWorldModel
		HideWorldModel();
		return 0;
	};
	if(functionNameHash == 179991) { // ShowWorldModel
		ShowWorldModel();
		return 0;
	};
	if(functionNameHash == 110318) { // OwnerDied
		OwnerDied();
		return 0;
	};
	if(functionNameHash == 134747) { // BeginAttack
		BeginAttack();
		return 0;
	};
	if(functionNameHash == 108281) { // EndAttack
		EndAttack();
		return 0;
	};
	if(functionNameHash == 84187) { // IsReady
		return (intptr_t)IsReady();
	};
	if(functionNameHash == 137206) { // IsReloading
		return (intptr_t)IsReloading();
	};
	if(functionNameHash == 139817) { // IsHolstered
		return (intptr_t)IsHolstered();
	};
	if(functionNameHash == 170062) { // ShowCrosshair
		return (intptr_t)ShowCrosshair();
	};
	if(functionNameHash == 83005) { // CanDrop
		return (intptr_t)CanDrop();
	};
	if(functionNameHash == 155408) { // WeaponStolen
		WeaponStolen();
		return 0;
	};
	if(functionNameHash == 184609) { // ForceAmmoInClip
		ForceAmmoInClip();
		return 0;
	};
	if(functionNameHash == 114874) { // GetStatus
		GetStatus();
		return 0;
	};
	if(functionNameHash == 124648) { // GetZoomFov
		return (intptr_t)GetZoomFov();
	};
	if(functionNameHash == 151891) { // FlashlightOn
		FlashlightOn();
		return 0;
	};
	if(functionNameHash == 164213) { // FlashlightOff
		FlashlightOff();
		return 0;
	};
	if(functionNameHash == 136649) { // GetAmmoType
		GetAmmoType();
		return 0;
	};
	if(functionNameHash == 161573) { // AmmoAvailable
		return (intptr_t)AmmoAvailable();
	};
	if(functionNameHash == 119819) { // AmmoInClip
		return (intptr_t)AmmoInClip();
	};
	if(functionNameHash == 162729) { // ResetAmmoClip
		ResetAmmoClip();
		return 0;
	};
	if(functionNameHash == 98507) { // ClipSize
		return (intptr_t)ClipSize();
	};
	if(functionNameHash == 85491) { // LowAmmo
		return (intptr_t)LowAmmo();
	};
	if(functionNameHash == 152979) { // AmmoRequired
		return (intptr_t)AmmoRequired();
	};
	if(functionNameHash == 112768) { // AmmoCount
		return (intptr_t)AmmoCount();
	};
	if(functionNameHash == 188573) { // GetGrabberState
		return (intptr_t)GetGrabberState();
	};
	if(functionNameHash == 163273) { // GetWorldModel
		return (intptr_t)GetWorldModel();
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 208077) { // MuzzleFlashLight
		MuzzleFlashLight();
		return 0;
	};
	if(functionNameHash == 297946) { // RemoveMuzzleFlashlight
		RemoveMuzzleFlashlight();
		return 0;
	};
	if(functionNameHash == 199165) { // GetDeclEntityDef
		return (intptr_t)GetDeclEntityDef();
	};
	if(functionNameHash == 135992) { // Event_Clear
		Event_Clear();
		return 0;
	};
	if(functionNameHash == 178435) { // Event_GetOwner
		Event_GetOwner();
		return 0;
	};
	if(functionNameHash == 219645) { // Event_WeaponReady
		Event_WeaponReady();
		return 0;
	};
	if(functionNameHash == 272756) { // Event_WeaponOutOfAmmo
		Event_WeaponOutOfAmmo();
		return 0;
	};
	if(functionNameHash == 276824) { // Event_WeaponReloading
		Event_WeaponReloading();
		return 0;
	};
	if(functionNameHash == 279645) { // Event_WeaponHolstered
		Event_WeaponHolstered();
		return 0;
	};
	if(functionNameHash == 235760) { // Event_WeaponRising
		Event_WeaponRising();
		return 0;
	};
	if(functionNameHash == 265858) { // Event_WeaponLowering
		Event_WeaponLowering();
		return 0;
	};
	if(functionNameHash == 199693) { // Event_AmmoInClip
		Event_AmmoInClip();
		return 0;
	};
	if(functionNameHash == 243379) { // Event_AmmoAvailable
		Event_AmmoAvailable();
		return 0;
	};
	if(functionNameHash == 262459) { // Event_TotalAmmoCount
		Event_TotalAmmoCount();
		return 0;
	};
	if(functionNameHash == 177385) { // Event_ClipSize
		Event_ClipSize();
		return 0;
	};
	if(functionNameHash == 126624) { // Event_Next
		Event_Next();
		return 0;
	};
	if(functionNameHash == 291264) { // Event_CreateProjectile
		Event_CreateProjectile();
		return 0;
	};
	if(functionNameHash == 203527) { // Event_EjectBrass
		Event_EjectBrass();
		return 0;
	};
	if(functionNameHash == 136084) { // Event_Melee
		Event_Melee();
		return 0;
	};
	if(functionNameHash == 245163) { // Event_GetWorldModel
		Event_GetWorldModel();
		return 0;
	};
	if(functionNameHash == 204676) { // Event_AutoReload
		Event_AutoReload();
		return 0;
	};
	if(functionNameHash == 189478) { // Event_NetReload
		Event_NetReload();
		return 0;
	};
	if(functionNameHash == 219964) { // Event_IsInvisible
		return (intptr_t)Event_IsInvisible();
	};
	if(functionNameHash == 227297) { // Event_NetEndReload
		Event_NetEndReload();
		return 0;
	};
	if(functionNameHash == 178279) { // EnterCinematic
		EnterCinematic();
		return 0;
	};
	if(functionNameHash == 165047) { // ExitCinematic
		ExitCinematic();
		return 0;
	};
	if(functionNameHash == 124601) { // NetCatchup
		NetCatchup();
		return 0;
	};
	if(functionNameHash == 96516) { // IsLinked
		return (intptr_t)IsLinked();
	};
	if(functionNameHash == 170742) { // AlertMonsters
		AlertMonsters();
		return 0;
	};
	if(functionNameHash == 181199) { // UpdateNozzleFx
		UpdateNozzleFx();
		return 0;
	};
	if(functionNameHash == 251065) { // UpdateFlashPosition
		UpdateFlashPosition();
		return 0;
	};
	if(functionNameHash == 285326) { // Event_GrabberHasTarget
		return (intptr_t)Event_GrabberHasTarget();
	};
	if(functionNameHash == 293443) { // Event_StartWeaponSmoke
		Event_StartWeaponSmoke();
		return 0;
	};
	if(functionNameHash == 278872) { // Event_StopWeaponSmoke
		Event_StopWeaponSmoke();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idLight::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 144625) { // FreeLightDef
		FreeLightDef();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 146975) { // GetBaseColor
		GetBaseColor();
		return 0;
	};
	if(functionNameHash == 22601) { // On
		On();
		return 0;
	};
	if(functionNameHash == 33983) { // Off
		Off();
		return 0;
	};
	if(functionNameHash == 209896) { // GetLightDefHandle
		GetLightDefHandle();
		return 0;
	};
	if(functionNameHash == 163688) { // SetLightLevel
		SetLightLevel();
		return 0;
	};
	if(functionNameHash == 218178) { // ShowEditingDialog
		ShowEditingDialog();
		return 0;
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 269944) { // PresentLightDefChange
		PresentLightDefChange();
		return 0;
	};
	if(functionNameHash == 269021) { // PresentModelDefChange
		PresentModelDefChange();
		return 0;
	};
	if(functionNameHash == 121918) { // Event_Hide
		Event_Hide();
		return 0;
	};
	if(functionNameHash == 126868) { // Event_Show
		Event_Show();
		return 0;
	};
	if(functionNameHash == 97795) { // Event_On
		Event_On();
		return 0;
	};
	if(functionNameHash == 109741) { // Event_Off
		Event_Off();
		return 0;
	};
	if(functionNameHash == 275399) { // Event_SetSoundHandles
		Event_SetSoundHandles();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t EnvironmentProbe::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 187806) { // FreeEnvprobeDef
		FreeEnvprobeDef();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 146975) { // GetBaseColor
		GetBaseColor();
		return 0;
	};
	if(functionNameHash == 22601) { // On
		On();
		return 0;
	};
	if(functionNameHash == 33983) { // Off
		Off();
		return 0;
	};
	if(functionNameHash == 254512) { // GetEnvprobeDefHandle
		GetEnvprobeDefHandle();
		return 0;
	};
	if(functionNameHash == 163688) { // SetLightLevel
		SetLightLevel();
		return 0;
	};
	if(functionNameHash == 218178) { // ShowEditingDialog
		ShowEditingDialog();
		return 0;
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 315858) { // PresentEnvprobeDefChange
		PresentEnvprobeDefChange();
		return 0;
	};
	if(functionNameHash == 121918) { // Event_Hide
		Event_Hide();
		return 0;
	};
	if(functionNameHash == 126868) { // Event_Show
		Event_Show();
		return 0;
	};
	if(functionNameHash == 97795) { // Event_On
		Event_On();
		return 0;
	};
	if(functionNameHash == 109741) { // Event_Off
		Event_Off();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idWorldspawn::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 153439) { // Event_Remove
		Event_Remove();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idItem::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 382066) { // GetPredictPickupMilliseconds
		GetPredictPickupMilliseconds();
		return 0;
	};
	if(functionNameHash == 219076) { // Event_DropToFloor
		Event_DropToFloor();
		return 0;
	};
	if(functionNameHash == 168370) { // Event_Respawn
		Event_Respawn();
		return 0;
	};
	if(functionNameHash == 193570) { // Event_RespawnFx
		Event_RespawnFx();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idItemPowerup::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idObjective::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 232865) { // Event_GetPlayerPos
		Event_GetPlayerPos();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idVideoCDItem::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idPDAItem::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idMoveableItem::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 219076) { // Event_DropToFloor
		Event_DropToFloor();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idItemTeam::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 88469) { // Capture
		Capture();
		return 0;
	};
	if(functionNameHash == 144625) { // FreeLightDef
		FreeLightDef();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 217630) { // Event_FlagCapture
		Event_FlagCapture();
		return 0;
	};
	if(functionNameHash == 171571) { // PrivateReturn
		PrivateReturn();
		return 0;
	};
	if(functionNameHash == 125953) { // UpdateGuis
		UpdateGuis();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMoveablePDAItem::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idItemRemover::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idObjectiveComplete::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 232865) { // Event_GetPlayerPos
		Event_GetPlayerPos();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPlayer::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 48744) { // Init
		Init();
		return 0;
	};
	if(functionNameHash == 223208) { // PrepareForRestart
		PrepareForRestart();
		return 0;
	};
	if(functionNameHash == 90512) { // Restart
		Restart();
		return 0;
	};
	if(functionNameHash == 249647) { // LinkScriptVariables
		LinkScriptVariables();
		return 0;
	};
	if(functionNameHash == 226876) { // SetupWeaponEntity
		SetupWeaponEntity();
		return 0;
	};
	if(functionNameHash == 238460) { // SpawnFromSpawnSpot
		SpawnFromSpawnSpot();
		return 0;
	};
	if(functionNameHash == 148179) { // SetClipModel
		SetClipModel();
		return 0;
	};
	if(functionNameHash == 237887) { // SavePersistantInfo
		SavePersistantInfo();
		return 0;
	};
	if(functionNameHash == 284524) { // RestorePersistantInfo
		RestorePersistantInfo();
		return 0;
	};
	if(functionNameHash == 149910) { // CacheWeapons
		CacheWeapons();
		return 0;
	};
	if(functionNameHash == 178279) { // EnterCinematic
		EnterCinematic();
		return 0;
	};
	if(functionNameHash == 165047) { // ExitCinematic
		ExitCinematic();
		return 0;
	};
	if(functionNameHash == 210484) { // UpdateConditions
		UpdateConditions();
		return 0;
	};
	if(functionNameHash == 265702) { // ResetControllerShake
		ResetControllerShake();
		return 0;
	};
	if(functionNameHash == 149541) { // GetAimAssist
		return (intptr_t)GetAimAssist();
	};
	if(functionNameHash == 163648) { // GetRenderView
		return (intptr_t)GetRenderView();
	};
	if(functionNameHash == 247267) { // CalculateRenderView
		CalculateRenderView();
		return 0;
	};
	if(functionNameHash == 323196) { // CalculateFirstPersonView
		CalculateFirstPersonView();
		return 0;
	};
	if(functionNameHash == 266853) { // UpdateSpectatingText
		UpdateSpectatingText();
		return 0;
	};
	if(functionNameHash == 124692) { // DefaultFov
		DefaultFov();
		return 0;
	};
	if(functionNameHash == 180136) { // GetEyePosition
		GetEyePosition();
		return 0;
	};
	if(functionNameHash == 250140) { // GetPrimaryObjective
		return (intptr_t)GetPrimaryObjective();
	};
	if(functionNameHash == 157534) { // GetInventory
		GetInventory();
		return 0;
	};
	if(functionNameHash == 267860) { // GetNumInventoryItems
		return (intptr_t)GetNumInventoryItems();
	};
	if(functionNameHash == 132490) { // EndAudioLog
		EndAudioLog();
		return 0;
	};
	if(functionNameHash == 146750) { // EndVideoDisk
		EndVideoDisk();
		return 0;
	};
	if(functionNameHash == 203479) { // GetVideoMaterial
		return (intptr_t)GetVideoMaterial();
	};
	if(functionNameHash == 165808) { // ClearPowerUps
		ClearPowerUps();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 127713) { // NextWeapon
		NextWeapon();
		return 0;
	};
	if(functionNameHash == 179818) { // NextBestWeapon
		NextBestWeapon();
		return 0;
	};
	if(functionNameHash == 127456) { // PrevWeapon
		PrevWeapon();
		return 0;
	};
	if(functionNameHash == 141364) { // LowerWeapon
		LowerWeapon();
		return 0;
	};
	if(functionNameHash == 138813) { // RaiseWeapon
		RaiseWeapon();
		return 0;
	};
	if(functionNameHash == 289786) { // WeaponLoweringCallback
		WeaponLoweringCallback();
		return 0;
	};
	if(functionNameHash == 259440) { // WeaponRisingCallback
		WeaponRisingCallback();
		return 0;
	};
	if(functionNameHash == 381109) { // RemoveAllButEssentialWeapons
		RemoveAllButEssentialWeapons();
		return 0;
	};
	if(functionNameHash == 291879) { // CanShowWeaponViewmodel
		return (intptr_t)CanShowWeaponViewmodel();
	};
	if(functionNameHash == 98493) { // AddAIKill
		AddAIKill();
		return 0;
	};
	if(functionNameHash == 247825) { // SetCurrentHeartRate
		SetCurrentHeartRate();
		return 0;
	};
	if(functionNameHash == 198082) { // GetBaseHeartRate
		return (intptr_t)GetBaseHeartRate();
	};
	if(functionNameHash == 110114) { // UpdateAir
		UpdateAir();
		return 0;
	};
	if(functionNameHash == 209361) { // UpdatePowerupHud
		UpdatePowerupHud();
		return 0;
	};
	if(functionNameHash == 110505) { // GuiActive
		return (intptr_t)GuiActive();
	};
	if(functionNameHash == 100976) { // TogglePDA
		TogglePDA();
		return 0;
	};
	if(functionNameHash == 110723) { // UpdateHud
		UpdateHud();
		return 0;
	};
	if(functionNameHash == 60789) { // GetPDA
		return (intptr_t)GetPDA();
	};
	if(functionNameHash == 111683) { // GetPDAOpen
		return (intptr_t)GetPDAOpen();
	};
	if(functionNameHash == 217835) { // GetInfluenceLevel
		return (intptr_t)GetInfluenceLevel();
	};
	if(functionNameHash == 259212) { // GetPrivateCameraView
		return (intptr_t)GetPrivateCameraView();
	};
	if(functionNameHash == 218301) { // UpdateChattingHud
		UpdateChattingHud();
		return 0;
	};
	if(functionNameHash == 231979) { // Event_StopAudioLog
		Event_StopAudioLog();
		return 0;
	};
	if(functionNameHash == 82942) { // HideTip
		HideTip();
		return 0;
	};
	if(functionNameHash == 150457) { // IsTipVisible
		return (intptr_t)IsTipVisible();
	};
	if(functionNameHash == 162972) { // HideObjective
		HideObjective();
		return 0;
	};
	if(functionNameHash == 154873) { // IsRespawning
		return (intptr_t)IsRespawning();
	};
	if(functionNameHash == 152040) { // IsInTeleport
		return (intptr_t)IsInTeleport();
	};
	if(functionNameHash == 149259) { // GetSkinIndex
		return (intptr_t)GetSkinIndex();
	};
	if(functionNameHash == 235912) { // GetInfluenceEntity
		return (intptr_t)GetInfluenceEntity();
	};
	if(functionNameHash == 260455) { // GetInfluenceMaterial
		return (intptr_t)GetInfluenceMaterial();
	};
	if(functionNameHash == 233090) { // GetInfluenceRadius
		GetInfluenceRadius();
		return 0;
	};
	if(functionNameHash == 208894) { // GetPlayerPhysics
		return (intptr_t)GetPlayerPhysics();
	};
	if(functionNameHash == 95325) { // IsLeader
		return (intptr_t)IsLeader();
	};
	if(functionNameHash == 194926) { // UpdateSkinSetup
		UpdateSkinSetup();
		return 0;
	};
	if(functionNameHash == 95320) { // OnLadder
		return (intptr_t)OnLadder();
	};
	if(functionNameHash == 221204) { // UpdatePlayerIcons
		UpdatePlayerIcons();
		return 0;
	};
	if(functionNameHash == 192692) { // DrawPlayerIcons
		DrawPlayerIcons();
		return 0;
	};
	if(functionNameHash == 190255) { // HidePlayerIcons
		HidePlayerIcons();
		return 0;
	};
	if(functionNameHash == 109351) { // NeedsIcon
		return (intptr_t)NeedsIcon();
	};
	if(functionNameHash == 232272) { // StopHealthRecharge
		StopHealthRecharge();
		return 0;
	};
	if(functionNameHash == 208447) { // GetCurrentWeapon
		GetCurrentWeapon();
		return 0;
	};
	if(functionNameHash == 265555) { // GetCurrentWeaponSlot
		return (intptr_t)GetCurrentWeaponSlot();
	};
	if(functionNameHash == 174179) { // GetIdealWeapon
		return (intptr_t)GetIdealWeapon();
	};
	if(functionNameHash == 206679) { // GetWeaponToggles
		GetWeaponToggles();
		return 0;
	};
	if(functionNameHash == 280196) { // PlayHelltimeStopSound
		PlayHelltimeStopSound();
		return 0;
	};
	if(functionNameHash == 95972) { // DropFlag
		DropFlag();
		return 0;
	};
	if(functionNameHash == 125711) { // ReturnFlag
		ReturnFlag();
		return 0;
	};
	if(functionNameHash == 143723) { // FreeModelDef
		FreeModelDef();
		return 0;
	};
	if(functionNameHash == 127139) { // SelfSmooth
		return (intptr_t)SelfSmooth();
	};
	if(functionNameHash == 199645) { // GetViewBobAngles
		GetViewBobAngles();
		return 0;
	};
	if(functionNameHash == 120368) { // GetViewBob
		GetViewBob();
		return 0;
	};
	if(functionNameHash == 273462) { // GetAchievementManager
		GetAchievementManager();
		return 0;
	};
	if(functionNameHash == 273462) { // GetAchievementManager
		GetAchievementManager();
		return 0;
	};
	if(functionNameHash == 161926) { // GetPlayedTime
		return (intptr_t)GetPlayedTime();
	};
	if(functionNameHash == 230767) { // GetClientFireCount
		return (intptr_t)GetClientFireCount();
	};
	if(functionNameHash == 235397) { // IncrementFireCount
		IncrementFireCount();
		return 0;
	};
	if(functionNameHash == 277513) { // ShowRespawnHudMessage
		ShowRespawnHudMessage();
		return 0;
	};
	if(functionNameHash == 272797) { // HideRespawnHudMessage
		HideRespawnHudMessage();
		return 0;
	};
	if(functionNameHash == 250595) { // IsLocallyControlled
		return (intptr_t)IsLocallyControlled();
	};
	if(functionNameHash == 209726) { // GetExpansionType
		GetExpansionType();
		return 0;
	};
	if(functionNameHash == 232151) { // AddProjectileKills
		AddProjectileKills();
		return 0;
	};
	if(functionNameHash == 234921) { // GetProjectileKills
		return (intptr_t)GetProjectileKills();
	};
	if(functionNameHash == 265803) { // ResetProjectileKills
		ResetProjectileKills();
		return 0;
	};
	if(functionNameHash == 165154) { // GetPrevWeapon
		return (intptr_t)GetPrevWeapon();
	};
	if(functionNameHash == 127156) { // StopFiring
		StopFiring();
		return 0;
	};
	if(functionNameHash == 124685) { // FireWeapon
		FireWeapon();
		return 0;
	};
	if(functionNameHash == 163981) { // Weapon_Combat
		Weapon_Combat();
		return 0;
	};
	if(functionNameHash == 115606) { // Weapon_NPC
		Weapon_NPC();
		return 0;
	};
	if(functionNameHash == 116127) { // Weapon_GUI
		Weapon_GUI();
		return 0;
	};
	if(functionNameHash == 153156) { // UpdateWeapon
		UpdateWeapon();
		return 0;
	};
	if(functionNameHash == 207861) { // UpdateFlashlight
		UpdateFlashlight();
		return 0;
	};
	if(functionNameHash == 151891) { // FlashlightOn
		FlashlightOn();
		return 0;
	};
	if(functionNameHash == 164213) { // FlashlightOff
		FlashlightOff();
		return 0;
	};
	if(functionNameHash == 209329) { // UpdateSpectating
		UpdateSpectating();
		return 0;
	};
	if(functionNameHash == 165177) { // SpectateCycle
		SpectateCycle();
		return 0;
	};
	if(functionNameHash == 209678) { // GunTurningOffset
		GunTurningOffset();
		return 0;
	};
	if(functionNameHash == 275446) { // GunAcceleratingOffset
		GunAcceleratingOffset();
		return 0;
	};
	if(functionNameHash == 205597) { // UpdateViewAngles
		UpdateViewAngles();
		return 0;
	};
	if(functionNameHash == 212276) { // EvaluateControls
		EvaluateControls();
		return 0;
	};
	if(functionNameHash == 138506) { // AdjustSpeed
		AdjustSpeed();
		return 0;
	};
	if(functionNameHash == 205065) { // AdjustBodyAngles
		AdjustBodyAngles();
		return 0;
	};
	if(functionNameHash == 182149) { // InitAASLocation
		InitAASLocation();
		return 0;
	};
	if(functionNameHash == 168400) { // SetAASLocation
		SetAASLocation();
		return 0;
	};
	if(functionNameHash == 49083) { // Move
		Move();
		return 0;
	};
	if(functionNameHash == 461936) { // RunPhysics_RemoteClientCorrection
		RunPhysics_RemoteClientCorrection();
		return 0;
	};
	if(functionNameHash == 181916) { // UpdatePowerUps
		UpdatePowerUps();
		return 0;
	};
	if(functionNameHash == 221329) { // SetSpectateOrigin
		SetSpectateOrigin();
		return 0;
	};
	if(functionNameHash == 293094) { // AllowClientAuthPhysics
		return (intptr_t)AllowClientAuthPhysics();
	};
	if(functionNameHash == 234606) { // GetPhysicsTimeStep
		GetPhysicsTimeStep();
		return 0;
	};
	if(functionNameHash == 123618) { // ClearFocus
		ClearFocus();
		return 0;
	};
	if(functionNameHash == 139401) { // UpdateFocus
		UpdateFocus();
		return 0;
	};
	if(functionNameHash == 180431) { // UpdateLocation
		UpdateLocation();
		return 0;
	};
	if(functionNameHash == 110451) { // ActiveGui
		return (intptr_t)ActiveGui();
	};
	if(functionNameHash == 179481) { // Respawn_Shared
		Respawn_Shared();
		return 0;
	};
	if(functionNameHash == 124190) { // UseVehicle
		UseVehicle();
		return 0;
	};
	if(functionNameHash == 208902) { // Event_GetButtons
		Event_GetButtons();
		return 0;
	};
	if(functionNameHash == 163139) { // Event_GetMove
		Event_GetMove();
		return 0;
	};
	if(functionNameHash == 244748) { // Event_GetViewAngles
		Event_GetViewAngles();
		return 0;
	};
	if(functionNameHash == 191630) { // Event_StopFxFov
		Event_StopFxFov();
		return 0;
	};
	if(functionNameHash == 231053) { // Event_EnableWeapon
		Event_EnableWeapon();
		return 0;
	};
	if(functionNameHash == 245925) { // Event_DisableWeapon
		Event_DisableWeapon();
		return 0;
	};
	if(functionNameHash == 292377) { // Event_GetCurrentWeapon
		Event_GetCurrentWeapon();
		return 0;
	};
	if(functionNameHash == 309426) { // Event_GetPreviousWeapon
		Event_GetPreviousWeapon();
		return 0;
	};
	if(functionNameHash == 278206) { // Event_GetWeaponEntity
		Event_GetWeaponEntity();
		return 0;
	};
	if(functionNameHash == 152629) { // Event_OpenPDA
		Event_OpenPDA();
		return 0;
	};
	if(functionNameHash == 124294) { // Event_InPDA
		Event_InPDA();
		return 0;
	};
	if(functionNameHash == 267939) { // Event_ExitTeleporter
		Event_ExitTeleporter();
		return 0;
	};
	if(functionNameHash == 161076) { // Event_HideTip
		Event_HideTip();
		return 0;
	};
	if(functionNameHash == 234486) { // Event_LevelTrigger
		Event_LevelTrigger();
		return 0;
	};
	if(functionNameHash == 147184) { // Event_Gibbed
		Event_Gibbed();
		return 0;
	};
	if(functionNameHash == 256549) { // Event_GetIdealWeapon
		Event_GetIdealWeapon();
		return 0;
	};
	if(functionNameHash == 194887) { // Event_StartWarp
		Event_StartWarp();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMover::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 207323) { // Event_OpenPortal
		Event_OpenPortal();
		return 0;
	};
	if(functionNameHash == 220884) { // Event_ClosePortal
		Event_ClosePortal();
		return 0;
	};
	if(functionNameHash == 177094) { // FindGuiTargets
		FindGuiTargets();
		return 0;
	};
	if(functionNameHash == 125413) { // DoneMoving
		DoneMoving();
		return 0;
	};
	if(functionNameHash == 153368) { // DoneRotating
		DoneRotating();
		return 0;
	};
	if(functionNameHash == 214718) { // Event_SetCallback
		Event_SetCallback();
		return 0;
	};
	if(functionNameHash == 209597) { // Event_StopMoving
		Event_StopMoving();
		return 0;
	};
	if(functionNameHash == 238848) { // Event_StopRotating
		Event_StopRotating();
		return 0;
	};
	if(functionNameHash == 205974) { // Event_UpdateMove
		Event_UpdateMove();
		return 0;
	};
	if(functionNameHash == 266154) { // Event_UpdateRotation
		Event_UpdateRotation();
		return 0;
	};
	if(functionNameHash == 259602) { // Event_FindGuiTargets
		Event_FindGuiTargets();
		return 0;
	};
	if(functionNameHash == 262020) { // Event_InitGuiTargets
		Event_InitGuiTargets();
		return 0;
	};
	if(functionNameHash == 315240) { // Event_EnableSplineAngles
		Event_EnableSplineAngles();
		return 0;
	};
	if(functionNameHash == 330715) { // Event_DisableSplineAngles
		Event_DisableSplineAngles();
		return 0;
	};
	if(functionNameHash == 424511) { // Event_RemoveInitialSplineAngles
		Event_RemoveInitialSplineAngles();
		return 0;
	};
	if(functionNameHash == 208923) { // Event_StopSpline
		Event_StopSpline();
		return 0;
	};
	if(functionNameHash == 178540) { // Event_IsMoving
		Event_IsMoving();
		return 0;
	};
	if(functionNameHash == 207359) { // Event_IsRotating
		Event_IsRotating();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idSplinePath::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idElevator::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 125413) { // DoneMoving
		DoneMoving();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 164442) { // OpenInnerDoor
		OpenInnerDoor();
		return 0;
	};
	if(functionNameHash == 163033) { // CloseAllDoors
		CloseAllDoors();
		return 0;
	};
	if(functionNameHash == 188328) { // DisableAllDoors
		DisableAllDoors();
		return 0;
	};
	if(functionNameHash == 220682) { // EnableProperDoors
		EnableProperDoors();
		return 0;
	};
	if(functionNameHash == 293800) { // Event_PostFloorArrival
		Event_PostFloorArrival();
		return 0;
	};
	if(functionNameHash == 233629) { // Event_SetGuiStates
		Event_SetGuiStates();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMover_Binary::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 82528) { // PreBind
		PreBind();
		return 0;
	};
	if(functionNameHash == 98395) { // PostBind
		PostBind();
		return 0;
	};
	if(functionNameHash == 163766) { // GotoPosition1
		GotoPosition1();
		return 0;
	};
	if(functionNameHash == 163897) { // GotoPosition2
		GotoPosition2();
		return 0;
	};
	if(functionNameHash == 201128) { // GetActivateChain
		return (intptr_t)GetActivateChain();
	};
	if(functionNameHash == 164678) { // GetMoveMaster
		return (intptr_t)GetMoveMaster();
	};
	if(functionNameHash == 108379) { // IsBlocked
		return (intptr_t)IsBlocked();
	};
	if(functionNameHash == 153395) { // GetActivator
		return (intptr_t)GetActivator();
	};
	if(functionNameHash == 165486) { // GetMoverState
		GetMoverState();
		return 0;
	};
	if(functionNameHash == 177094) { // FindGuiTargets
		FindGuiTargets();
		return 0;
	};
	if(functionNameHash == 214718) { // Event_SetCallback
		Event_SetCallback();
		return 0;
	};
	if(functionNameHash == 229109) { // Event_ReturnToPos1
		Event_ReturnToPos1();
		return 0;
	};
	if(functionNameHash == 330944) { // Event_Reached_BinaryMover
		Event_Reached_BinaryMover();
		return 0;
	};
	if(functionNameHash == 148470) { // Event_Enable
		Event_Enable();
		return 0;
	};
	if(functionNameHash == 162724) { // Event_Disable
		Event_Disable();
		return 0;
	};
	if(functionNameHash == 207323) { // Event_OpenPortal
		Event_OpenPortal();
		return 0;
	};
	if(functionNameHash == 220884) { // Event_ClosePortal
		Event_ClosePortal();
		return 0;
	};
	if(functionNameHash == 259602) { // Event_FindGuiTargets
		Event_FindGuiTargets();
		return 0;
	};
	if(functionNameHash == 262020) { // Event_InitGuiTargets
		Event_InitGuiTargets();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idDoor::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 82528) { // PreBind
		PreBind();
		return 0;
	};
	if(functionNameHash == 98395) { // PostBind
		PostBind();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 71773) { // IsOpen
		return (intptr_t)IsOpen();
	};
	if(functionNameHash == 109870) { // IsNoTouch
		return (intptr_t)IsNoTouch();
	};
	if(functionNameHash == 95895) { // IsLocked
		return (intptr_t)IsLocked();
	};
	if(functionNameHash == 60817) { // Close
		Close();
		return 0;
	};
	if(functionNameHash == 48482) { // Open
		Open();
		return 0;
	};
	if(functionNameHash == 330944) { // Event_Reached_BinaryMover
		Event_Reached_BinaryMover();
		return 0;
	};
	if(functionNameHash == 193830) { // Event_StartOpen
		Event_StartOpen();
		return 0;
	};
	if(functionNameHash == 292733) { // Event_SpawnDoorTrigger
		Event_SpawnDoorTrigger();
		return 0;
	};
	if(functionNameHash == 309067) { // Event_SpawnSoundTrigger
		Event_SpawnSoundTrigger();
		return 0;
	};
	if(functionNameHash == 137889) { // Event_Close
		Event_Close();
		return 0;
	};
	if(functionNameHash == 124954) { // Event_Open
		Event_Open();
		return 0;
	};
	if(functionNameHash == 149373) { // Event_IsOpen
		Event_IsOpen();
		return 0;
	};
	if(functionNameHash == 149844) { // Event_Locked
		Event_Locked();
		return 0;
	};
	if(functionNameHash == 207323) { // Event_OpenPortal
		Event_OpenPortal();
		return 0;
	};
	if(functionNameHash == 220884) { // Event_ClosePortal
		Event_ClosePortal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPlat::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 276247) { // RunPhysics_NoBlocking
		RunPhysics_NoBlocking();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 82528) { // PreBind
		PreBind();
		return 0;
	};
	if(functionNameHash == 98395) { // PostBind
		PostBind();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMover_Periodic::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idRotater::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idBobber::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idPendulum::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idRiser::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idCameraView::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 50892) { // Stop
		Stop();
		return 0;
	};
	if(functionNameHash == 264827) { // Event_SetAttachments
		Event_SetAttachments();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idCameraAnim::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 63710) { // Start
		Start();
		return 0;
	};
	if(functionNameHash == 50892) { // Stop
		Stop();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 94795) { // LoadAnim
		LoadAnim();
		return 0;
	};
	if(functionNameHash == 140926) { // Event_Start
		Event_Start();
		return 0;
	};
	if(functionNameHash == 127484) { // Event_Stop
		Event_Stop();
		return 0;
	};
	if(functionNameHash == 214718) { // Event_SetCallback
		Event_SetCallback();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idMoveable::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 113684) { // AllowStep
		return (intptr_t)AllowStep();
	};
	if(functionNameHash == 137009) { // GetAttacker
		return (intptr_t)GetAttacker();
	};
	if(functionNameHash == 286384) { // GetRenderModelMaterial
		return (intptr_t)GetRenderModelMaterial();
	};
	if(functionNameHash == 175070) { // BecomeNonSolid
		BecomeNonSolid();
		return 0;
	};
	if(functionNameHash == 306497) { // FollowInitialSplinePath
		return (intptr_t)FollowInitialSplinePath();
	};
	if(functionNameHash == 257488) { // Event_BecomeNonSolid
		Event_BecomeNonSolid();
		return 0;
	};
	if(functionNameHash == 363849) { // Event_SetOwnerFromSpawnArgs
		Event_SetOwnerFromSpawnArgs();
		return 0;
	};
	if(functionNameHash == 174863) { // Event_IsAtRest
		Event_IsAtRest();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idBarrel::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 137833) { // BarrelThink
		BarrelThink();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idExplodingBarrel::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 96991) { // IsStable
		return (intptr_t)IsStable();
	};
	if(functionNameHash == 155873) { // StartBurning
		StartBurning();
		return 0;
	};
	if(functionNameHash == 142330) { // StopBurning
		StopBurning();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 207845) { // ExplodingEffects
		ExplodingEffects();
		return 0;
	};
	if(functionNameHash == 138368) { // UpdateLight
		UpdateLight();
		return 0;
	};
	if(functionNameHash == 168370) { // Event_Respawn
		Event_Respawn();
		return 0;
	};
	if(functionNameHash == 166403) { // Event_Explode
		Event_Explode();
		return 0;
	};
	if(functionNameHash == 265462) { // Event_TriggerTargets
		Event_TriggerTargets();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Remove::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Show::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Damage::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SessionCommand::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_EndLevel::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_WaitForButton::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetGlobalShaderTime::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetShaderParm::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetShaderTime::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_FadeEntity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_LightFadeIn::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_LightFadeOut::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Give::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_GiveEmail::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetModel::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetInfluence::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 294203) { // Event_RestoreInfluence
		Event_RestoreInfluence();
		return 0;
	};
	if(functionNameHash == 263754) { // Event_GatherEntities
		Event_GatherEntities();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetKeyVal::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetFov::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_SetPrimaryObjective::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_LockDoor::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_CallObjectFunction::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_EnableLevelWeapons::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Tip::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 148544) { // Event_TipOff
		Event_TipOff();
		return 0;
	};
	if(functionNameHash == 232865) { // Event_GetPlayerPos
		Event_GetPlayerPos();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_GiveSecurity::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_RemoveWeapons::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_LevelTrigger::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Checkpoint::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_EnableStamina::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_FadeSoundClass::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 253902) { // Event_RestoreVolume
		Event_RestoreVolume();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_RumbleJoystick::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTarget_Achievement::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 223336) { // GetScriptFunction
		return (intptr_t)GetScriptFunction();
	};
	if(functionNameHash == 70912) { // Enable
		Enable();
		return 0;
	};
	if(functionNameHash == 84512) { // Disable
		Disable();
		return 0;
	};
	if(functionNameHash == 124894) { // CallScript
		CallScript();
		return 0;
	};
	if(functionNameHash == 148470) { // Event_Enable
		Event_Enable();
		return 0;
	};
	if(functionNameHash == 162724) { // Event_Disable
		Event_Disable();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Multi::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_EntityName::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Timer::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 70912) { // Enable
		Enable();
		return 0;
	};
	if(functionNameHash == 84512) { // Disable
		Disable();
		return 0;
	};
	if(functionNameHash == 139267) { // Event_Timer
		Event_Timer();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Count::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Hurt::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Fade::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Touch::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 70912) { // Enable
		Enable();
		return 0;
	};
	if(functionNameHash == 84512) { // Disable
		Disable();
		return 0;
	};
	if(functionNameHash == 169188) { // TouchEntities
		TouchEntities();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTrigger_Flag::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idSound::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 218178) { // ShowEditingDialog
		ShowEditingDialog();
		return 0;
	};
	if(functionNameHash == 139267) { // Event_Timer
		Event_Timer();
		return 0;
	};
	if(functionNameHash == 97795) { // Event_On
		Event_On();
		return 0;
	};
	if(functionNameHash == 109741) { // Event_Off
		Event_Off();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idEntityFx::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 50892) { // Stop
		Stop();
		return 0;
	};
	if(functionNameHash == 102783) { // Duration
		Duration();
		return 0;
	};
	if(functionNameHash == 120419) { // EffectName
		return (intptr_t)EffectName();
	};
	if(functionNameHash == 62519) { // Joint
		return (intptr_t)Joint();
	};
	if(functionNameHash == 47044) { // Done
		Done();
		return 0;
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 160812) { // Event_ClearFx
		Event_ClearFx();
		return 0;
	};
	if(functionNameHash == 83058) { // CleanUp
		CleanUp();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTeleporter::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t idSecurityCamera::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 163648) { // GetRenderView
		return (intptr_t)GetRenderView();
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 128766) { // StartSweep
		StartSweep();
		return 0;
	};
	if(functionNameHash == 147260) { // CanSeePlayer
		return (intptr_t)CanSeePlayer();
	};
	if(functionNameHash == 85151) { // DrawFov
		DrawFov();
		return 0;
	};
	if(functionNameHash == 84690) { // GetAxis
		GetAxis();
		return 0;
	};
	if(functionNameHash == 125121) { // SweepSpeed
		SweepSpeed();
		return 0;
	};
	if(functionNameHash == 237021) { // Event_ReverseSweep
		Event_ReverseSweep();
		return 0;
	};
	if(functionNameHash == 251443) { // Event_ContinueSweep
		Event_ContinueSweep();
		return 0;
	};
	if(functionNameHash == 138890) { // Event_Pause
		Event_Pause();
		return 0;
	};
	if(functionNameHash == 138176) { // Event_Alert
		Event_Alert();
		return 0;
	};
	if(functionNameHash == 173084) { // Event_AddLight
		Event_AddLight();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idBrittleFracture::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 90014) { // Present
		Present();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 97787) { // IsBroken
		return (intptr_t)IsBroken();
	};
	if(functionNameHash == 278761) { // ClientPredictionThink
		ClientPredictionThink();
		return 0;
	};
	if(functionNameHash == 58750) { // Break
		Break();
		return 0;
	};
	if(functionNameHash == 180056) { // FindNeighbours
		FindNeighbours();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAI::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 97948) { // GetEnemy
		return (intptr_t)GetEnemy();
	};
	if(functionNameHash == 149251) { // GetTalkState
		GetTalkState();
		return 0;
	};
	if(functionNameHash == 123975) { // EnemyRange
		EnemyRange();
		return 0;
	};
	if(functionNameHash == 48744) { // Init
		Init();
		return 0;
	};
	if(functionNameHash == 62250) { // SetAAS
		SetAAS();
		return 0;
	};
	if(functionNameHash == 150747) { // DormantBegin
		DormantBegin();
		return 0;
	};
	if(functionNameHash == 124039) { // DormantEnd
		DormantEnd();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 107792) { // EnemyDead
		EnemyDead();
		return 0;
	};
	if(functionNameHash == 261747) { // CanPlayChatterSounds
		CanPlayChatterSounds();
		return 0;
	};
	if(functionNameHash == 150248) { // SetChatSound
		SetChatSound();
		return 0;
	};
	if(functionNameHash == 139223) { // PlayChatter
		PlayChatter();
		return 0;
	};
	if(functionNameHash == 45590) { // Hide
		Hide();
		return 0;
	};
	if(functionNameHash == 50306) { // Show
		Show();
		return 0;
	};
	if(functionNameHash == 290625) { // CalculateAttackOffsets
		CalculateAttackOffsets();
		return 0;
	};
	if(functionNameHash == 164558) { // PlayCinematic
		PlayCinematic();
		return 0;
	};
	if(functionNameHash == 94860) { // DeadMove
		DeadMove();
		return 0;
	};
	if(functionNameHash == 97649) { // AnimMove
		AnimMove();
		return 0;
	};
	if(functionNameHash == 111283) { // SlideMove
		SlideMove();
		return 0;
	};
	if(functionNameHash == 234590) { // AdjustFlyingAngles
		AdjustFlyingAngles();
		return 0;
	};
	if(functionNameHash == 88456) { // FlyTurn
		FlyTurn();
		return 0;
	};
	if(functionNameHash == 86235) { // FlyMove
		FlyMove();
		return 0;
	};
	if(functionNameHash == 126402) { // StaticMove
		StaticMove();
		return 0;
	};
	if(functionNameHash == 113945) { // DrawRoute
		DrawRoute();
		return 0;
	};
	if(functionNameHash == 97687) { // MoveDone
		return (intptr_t)MoveDone();
	};
	if(functionNameHash == 183413) { // BlockedFailSafe
		BlockedFailSafe();
		return 0;
	};
	if(functionNameHash == 108124) { // FaceEnemy
		return (intptr_t)FaceEnemy();
	};
	if(functionNameHash == 217798) { // MoveToEnemyHeight
		return (intptr_t)MoveToEnemyHeight();
	};
	if(functionNameHash == 138052) { // MoveToEnemy
		return (intptr_t)MoveToEnemy();
	};
	if(functionNameHash == 152814) { // WanderAround
		return (intptr_t)WanderAround();
	};
	if(functionNameHash == 131961) { // FacingIdeal
		return (intptr_t)FacingIdeal();
	};
	if(functionNameHash == 51250) { // Turn
		Turn();
		return 0;
	};
	if(functionNameHash == 123373) { // ClearEnemy
		ClearEnemy();
		return 0;
	};
	if(functionNameHash == 237166) { // EnemyPositionValid
		return (intptr_t)EnemyPositionValid();
	};
	if(functionNameHash == 210788) { // SetEnemyPosition
		SetEnemyPosition();
		return 0;
	};
	if(functionNameHash == 253125) { // UpdateEnemyPosition
		UpdateEnemyPosition();
		return 0;
	};
	if(functionNameHash == 331085) { // CreateProjectileClipModel
		CreateProjectileClipModel();
		return 0;
	};
	if(functionNameHash == 210529) { // RemoveProjectile
		RemoveProjectile();
		return 0;
	};
	if(functionNameHash == 111231) { // TestMelee
		return (intptr_t)TestMelee();
	};
	if(functionNameHash == 108281) { // EndAttack
		EndAttack();
		return 0;
	};
	if(functionNameHash == 118703) { // PushWithAF
		PushWithAF();
		return 0;
	};
	if(functionNameHash == 194778) { // InitMuzzleFlash
		InitMuzzleFlash();
		return 0;
	};
	if(functionNameHash == 222597) { // UpdateMuzzleFlash
		UpdateMuzzleFlash();
		return 0;
	};
	if(functionNameHash == 357711) { // UpdateAnimationControllers
		UpdateAnimationControllers();
		return 0;
	};
	if(functionNameHash == 195019) { // UpdateParticles
		UpdateParticles();
		return 0;
	};
	if(functionNameHash == 249647) { // LinkScriptVariables
		LinkScriptVariables();
		return 0;
	};
	if(functionNameHash == 173157) { // UpdateAIScript
		UpdateAIScript();
		return 0;
	};
	if(functionNameHash == 370058) { // Event_FindEnemyInCombatNodes
		Event_FindEnemyInCombatNodes();
		return 0;
	};
	if(functionNameHash == 203415) { // Event_ClearEnemy
		Event_ClearEnemy();
		return 0;
	};
	if(functionNameHash == 334229) { // Event_LaunchHomingMissile
		Event_LaunchHomingMissile();
		return 0;
	};
	if(functionNameHash == 346298) { // Event_SetHomingMissileGoal
		Event_SetHomingMissileGoal();
		return 0;
	};
	if(functionNameHash == 187615) { // Event_EndAttack
		Event_EndAttack();
		return 0;
	};
	if(functionNameHash == 204439) { // Event_RandomPath
		Event_RandomPath();
		return 0;
	};
	if(functionNameHash == 254316) { // Event_CanBecomeSolid
		Event_CanBecomeSolid();
		return 0;
	};
	if(functionNameHash == 172048) { // CanBecomeSolid
		return (intptr_t)CanBecomeSolid();
	};
	if(functionNameHash == 216467) { // Event_BecomeSolid
		Event_BecomeSolid();
		return 0;
	};
	if(functionNameHash == 257488) { // Event_BecomeNonSolid
		Event_BecomeNonSolid();
		return 0;
	};
	if(functionNameHash == 244122) { // Event_BecomeRagdoll
		Event_BecomeRagdoll();
		return 0;
	};
	if(functionNameHash == 221180) { // Event_StopRagdoll
		Event_StopRagdoll();
		return 0;
	};
	if(functionNameHash == 188540) { // Event_GetHealth
		Event_GetHealth();
		return 0;
	};
	if(functionNameHash == 215341) { // Event_AllowDamage
		Event_AllowDamage();
		return 0;
	};
	if(functionNameHash == 229025) { // Event_IgnoreDamage
		Event_IgnoreDamage();
		return 0;
	};
	if(functionNameHash == 248832) { // Event_GetCurrentYaw
		Event_GetCurrentYaw();
		return 0;
	};
	if(functionNameHash == 210362) { // Event_MoveStatus
		Event_MoveStatus();
		return 0;
	};
	if(functionNameHash == 180637) { // Event_StopMove
		Event_StopMove();
		return 0;
	};
	if(functionNameHash == 218898) { // Event_MoveToCover
		Event_MoveToCover();
		return 0;
	};
	if(functionNameHash == 218784) { // Event_MoveToEnemy
		Event_MoveToEnemy();
		return 0;
	};
	if(functionNameHash == 302136) { // Event_MoveToEnemyHeight
		Event_MoveToEnemyHeight();
		return 0;
	};
	if(functionNameHash == 151776) { // Event_Wander
		Event_Wander();
		return 0;
	};
	if(functionNameHash == 212399) { // Event_FacingIdeal
		Event_FacingIdeal();
		return 0;
	};
	if(functionNameHash == 187446) { // Event_FaceEnemy
		Event_FaceEnemy();
		return 0;
	};
	if(functionNameHash == 241402) { // Event_GetCombatNode
		Event_GetCombatNode();
		return 0;
	};
	if(functionNameHash == 178493) { // Event_WaitMove
		Event_WaitMove();
		return 0;
	};
	if(functionNameHash == 244513) { // Event_GetTalkTarget
		Event_GetTalkTarget();
		return 0;
	};
	if(functionNameHash == 204053) { // Event_EnemyRange
		Event_EnemyRange();
		return 0;
	};
	if(functionNameHash == 220051) { // Event_EnemyRange2D
		Event_EnemyRange2D();
		return 0;
	};
	if(functionNameHash == 176796) { // Event_GetEnemy
		Event_GetEnemy();
		return 0;
	};
	if(functionNameHash == 217835) { // Event_GetEnemyPos
		Event_GetEnemyPos();
		return 0;
	};
	if(functionNameHash == 257779) { // Event_GetEnemyEyePos
		Event_GetEnemyEyePos();
		return 0;
	};
	if(functionNameHash == 214401) { // Event_CanHitEnemy
		Event_CanHitEnemy();
		return 0;
	};
	if(functionNameHash == 322380) { // Event_EnemyPositionValid
		Event_EnemyPositionValid();
		return 0;
	};
	if(functionNameHash == 286460) { // Event_TestChargeAttack
		Event_TestChargeAttack();
		return 0;
	};
	if(functionNameHash == 272685) { // Event_TestMeleeAttack
		Event_TestMeleeAttack();
		return 0;
	};
	if(functionNameHash == 125610) { // Event_Burn
		Event_Burn();
		return 0;
	};
	if(functionNameHash == 164022) { // Event_PreBurn
		Event_PreBurn();
		return 0;
	};
	if(functionNameHash == 189577) { // Event_ClearBurn
		Event_ClearBurn();
		return 0;
	};
	if(functionNameHash == 294369) { // Event_NumSmokeEmitters
		Event_NumSmokeEmitters();
		return 0;
	};
	if(functionNameHash == 237274) { // Event_StopThinking
		Event_StopThinking();
		return 0;
	};
	if(functionNameHash == 231201) { // Event_GetTurnDelta
		Event_GetTurnDelta();
		return 0;
	};
	if(functionNameHash == 218963) { // Event_GetMoveType
		Event_GetMoveType();
		return 0;
	};
	if(functionNameHash == 177724) { // Event_SaveMove
		Event_SaveMove();
		return 0;
	};
	if(functionNameHash == 223233) { // Event_RestoreMove
		Event_RestoreMove();
		return 0;
	};
	if(functionNameHash == 190609) { // Event_JumpFrame
		Event_JumpFrame();
		return 0;
	};
	if(functionNameHash == 200476) { // Event_EnableClip
		Event_EnableClip();
		return 0;
	};
	if(functionNameHash == 215122) { // Event_DisableClip
		Event_DisableClip();
		return 0;
	};
	if(functionNameHash == 248060) { // Event_EnableGravity
		Event_EnableGravity();
		return 0;
	};
	if(functionNameHash == 263056) { // Event_DisableGravity
		Event_DisableGravity();
		return 0;
	};
	if(functionNameHash == 222212) { // Event_EnableAFPush
		Event_EnableAFPush();
		return 0;
	};
	if(functionNameHash == 237017) { // Event_DisableAFPush
		Event_DisableAFPush();
		return 0;
	};
	if(functionNameHash == 258642) { // Event_ClearFlyOffset
		Event_ClearFlyOffset();
		return 0;
	};
	if(functionNameHash == 250014) { // Event_ThrowMoveable
		Event_ThrowMoveable();
		return 0;
	};
	if(functionNameHash == 159321) { // Event_ThrowAF
		Event_ThrowAF();
		return 0;
	};
	if(functionNameHash == 189068) { // Event_GetAngles
		Event_GetAngles();
		return 0;
	};
	if(functionNameHash == 367056) { // Event_GetTrajectoryToPlayer
		Event_GetTrajectoryToPlayer();
		return 0;
	};
	if(functionNameHash == 174908) { // Event_RealKill
		Event_RealKill();
		return 0;
	};
	if(functionNameHash == 124205) { // Event_Kill
		Event_Kill();
		return 0;
	};
	if(functionNameHash == 218562) { // Event_LocateEnemy
		Event_LocateEnemy();
		return 0;
	};
	if(functionNameHash == 217371) { // Event_GetObstacle
		Event_GetObstacle();
		return 0;
	};
	if(functionNameHash == 218372) { // Event_GetTurnRate
		Event_GetTurnRate();
		return 0;
	};
	if(functionNameHash == 240412) { // Event_CanReachEnemy
		Event_CanReachEnemy();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idCombatNode::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 121183) { // IsDisabled
		return (intptr_t)IsDisabled();
	};
	if(functionNameHash == 176427) { // Event_MarkUsed
		Event_MarkUsed();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idAI_Vagary::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	return __super::Invoke(functionName, param1);

};

intptr_t rvmAI_Follower::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 48744) { // Init
		Init();
		return 0;
	};
	if(functionNameHash == 130066) { // state_idle
		state_idle((stateParms_t *)param1);
		return 0;
	};
	if(functionNameHash == 211350) { // state_idle_frame
		return (intptr_t)state_idle_frame((stateParms_t *)param1);
	};
	if(functionNameHash == 161762) { // state_follow
		return (intptr_t)state_follow((stateParms_t *)param1);
	};
	if(functionNameHash == 244282) { // state_follow_frame
		return (intptr_t)state_follow_frame((stateParms_t *)param1);
	};
	if(functionNameHash == 215431) { // state_get_closer
		return (intptr_t)state_get_closer((stateParms_t *)param1);
	};
	if(functionNameHash == 157871) { // state_killed
		return (intptr_t)state_killed((stateParms_t *)param1);
	};
	if(functionNameHash == 199463) { // state_talk_anim
		return (intptr_t)state_talk_anim((stateParms_t *)param1);
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmMonsterBase::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 48744) { // Init
		Init();
		return 0;
	};
	if(functionNameHash == 305792) { // trigger_wakeup_targets
		trigger_wakeup_targets();
		return 0;
	};
	if(functionNameHash == 171989) { // state_Spawner
		state_Spawner();
		return 0;
	};
	if(functionNameHash == 173364) { // monster_begin
		return (intptr_t)monster_begin();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idTestModel::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 63102) { // Spawn
		Spawn();
		return 0;
	};
	if(functionNameHash == 476562) { // ShouldConstructScriptObjectAtSpawn
		ShouldConstructScriptObjectAtSpawn();
		return 0;
	};
	if(functionNameHash == 61762) { // Think
		Think();
		return 0;
	};
	if(functionNameHash == 183671) { // Event_Footstep
		Event_Footstep();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponFist::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 132482) { // GetFireAnim
		return (intptr_t)GetFireAnim();
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponPistol::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponFlashlight::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 125553) { // UpdateSkin
		UpdateSkin();
		return 0;
	};
	if(functionNameHash == 268148) { // UpdateLightIntensity
		UpdateLightIntensity();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponPDA::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponShotgun::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponDoubleShotgun::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponMachineGun::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponPlasmaGun::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponChainGun::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	if(functionNameHash == 150892) { // UpdateBarrel
		UpdateBarrel();
		return 0;
	};
	if(functionNameHash == 73785) { // SpinUp
		SpinUp();
		return 0;
	};
	if(functionNameHash == 100305) { // SpinDown
		SpinDown();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponRocketLauncher::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 125553) { // UpdateSkin
		UpdateSkin();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponBFG::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 123325) { // OverCharge
		OverCharge();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t rvmWeaponGrabber::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 60556) { // Raise
		Raise();
		return 0;
	};
	if(functionNameHash == 46077) { // Idle
		Idle();
		return 0;
	};
	if(functionNameHash == 47046) { // Fire
		Fire();
		return 0;
	};
	if(functionNameHash == 63107) { // Lower
		Lower();
		return 0;
	};
	if(functionNameHash == 72819) { // Reload
		Reload();
		return 0;
	};
	if(functionNameHash == 81139) { // CanFire
		CanFire();
		return 0;
	};
	if(functionNameHash == 162113) { // HasWaitSignal
		HasWaitSignal();
		return 0;
	};
	if(functionNameHash == 140229) { // StartActive
		StartActive();
		return 0;
	};
	if(functionNameHash == 126807) { // StopActive
		StopActive();
		return 0;
	};
	if(functionNameHash == 225303) { // StartWarningSound
		StartWarningSound();
		return 0;
	};
	if(functionNameHash == 237121) { // UpdateWarningSound
		UpdateWarningSound();
		return 0;
	};
	if(functionNameHash == 176832) { // UpdateGuiLight
		UpdateGuiLight();
		return 0;
	};
	return __super::Invoke(functionName, param1);

};

intptr_t idThread::Invoke(const char *functionName, void *param1) {
	int functionNameHash = idStr::Hash(functionName);
	if(functionNameHash == 149674) { // ManualDelete
		ManualDelete();
		return 0;
	};
	if(functionNameHash == 184974) { // EnableDebugInfo
		EnableDebugInfo();
		return 0;
	};
	if(functionNameHash == 199457) { // DisableDebugInfo
		DisableDebugInfo();
		return 0;
	};
	if(functionNameHash == 110282) { // WaitFrame
		WaitFrame();
		return 0;
	};
	if(functionNameHash == 139251) { // DisplayInfo
		DisplayInfo();
		return 0;
	};
	if(functionNameHash == 206780) { // IsDoneProcessing
		return (intptr_t)IsDoneProcessing();
	};
	if(functionNameHash == 84907) { // IsDying
		return (intptr_t)IsDying();
	};
	if(functionNameHash == 33511) { // End
		End();
		return 0;
	};
	if(functionNameHash == 88310) { // Execute
		return (intptr_t)Execute();
	};
	if(functionNameHash == 168173) { // ManualControl
		ManualControl();
		return 0;
	};
	if(functionNameHash == 181407) { // DoneProcessing
		DoneProcessing();
		return 0;
	};
	if(functionNameHash == 241236) { // ContinueProcessing
		ContinueProcessing();
		return 0;
	};
	if(functionNameHash == 137371) { // ThreadDying
		return (intptr_t)ThreadDying();
	};
	if(functionNameHash == 108234) { // EndThread
		EndThread();
		return 0;
	};
	if(functionNameHash == 112213) { // IsWaiting
		return (intptr_t)IsWaiting();
	};
	if(functionNameHash == 147984) { // ClearWaitFor
		ClearWaitFor();
		return 0;
	};
	if(functionNameHash == 63710) { // Start
		return (intptr_t)Start();
	};
	if(functionNameHash == 190527) { // WaitingOnThread
		return (intptr_t)WaitingOnThread();
	};
	if(functionNameHash == 148575) { // GetThreadNum
		return (intptr_t)GetThreadNum();
	};
	if(functionNameHash == 159226) { // GetThreadName
		return (intptr_t)GetThreadName();
	};
	return __super::Invoke(functionName, param1);

};

